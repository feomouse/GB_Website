// <auto-generated />
using System;
using GB_Project.Services.ShopService.ShopInfrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ShopAPI.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.GBProduct", b =>
                {
                    b.Property<Guid>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Img")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<int>("MSellNum")
                        .HasColumnType("int");

                    b.Property<decimal>("OrinPrice")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 38, scale: 17)))
                        .HasColumnType("smallmoney");

                    b.Property<int>("PraiseNum")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 38, scale: 17)))
                        .HasColumnType("smallmoney");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("ProductTypeId");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("VailEDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("VailSDate")
                        .HasColumnType("date");

                    b.Property<string>("VailTime")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("PkId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("GBProduct","shop");
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.GBProductItem", b =>
                {
                    b.Property<Guid>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GbItemImg");

                    b.Property<string>("GbItemName");

                    b.Property<int>("GbItemPrice");

                    b.Property<Guid>("GbProductId");

                    b.HasKey("PkId");

                    b.HasIndex("GbProductId");

                    b.ToTable("GBProductItem","shop");
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.GBRule", b =>
                {
                    b.Property<Guid>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid>("GBProductId");

                    b.HasKey("PkId");

                    b.HasIndex("GBProductId");

                    b.ToTable("GBRule","shop");
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.ProductType", b =>
                {
                    b.Property<Guid>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ShopId");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PkId");

                    b.HasIndex("ShopId");

                    b.ToTable("ProductType","shop");
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.Shop", b =>
                {
                    b.Property<Guid>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("GroupBuying")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIdentitied")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Pic")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("RegisterId")
                        .HasColumnType("Uniqueidentifier");

                    b.Property<string>("Tel")
                        .HasColumnType("varchar(11)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("PkId");

                    b.ToTable("shop","shop");
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.GBProduct", b =>
                {
                    b.HasOne("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.GBProductItem", b =>
                {
                    b.HasOne("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.GBProduct", "GBProduct")
                        .WithMany("Items")
                        .HasForeignKey("GbProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.GBRule", b =>
                {
                    b.HasOne("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.GBProduct", "_GBProduct")
                        .WithMany("GbRule")
                        .HasForeignKey("GBProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.ProductType", b =>
                {
                    b.HasOne("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.Shop", "_Shop")
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
