// <auto-generated />
using System;
using GB_Project.Services.ShopService.ShopInfrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ShopAPI.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.GBProduct", b =>
                {
                    b.Property<Guid>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<int>("MSellNum")
                        .HasColumnType("int");

                    b.Property<decimal>("OrinPrice")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 38, scale: 17)))
                        .HasColumnType("smallmoney");

                    b.Property<int>("PraiseNum")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 38, scale: 17)))
                        .HasColumnType("smallmoney");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("ProductTypeId");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("VailEDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("VailSDate")
                        .HasColumnType("date");

                    b.Property<string>("VailTime")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("PkId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("GBProduct","shop");
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.GBProductImg", b =>
                {
                    b.Property<Guid>("MGBProductId");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("MGBProductId", "Img");

                    b.ToTable("gbProductImg","shop");
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.MonthSell", b =>
                {
                    b.Property<Guid>("MShopId");

                    b.Property<string>("Year")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Month")
                        .HasColumnType("varchar(2)");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.HasKey("MShopId", "Year", "Month");

                    b.ToTable("monthSell","shop");
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.ProductType", b =>
                {
                    b.Property<Guid>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ShopId");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PkId");

                    b.HasIndex("ShopId");

                    b.ToTable("ProductType","shop");
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.Shop", b =>
                {
                    b.Property<Guid>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("GroupBuying")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIdentitied")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("OwnMoney")
                        .HasColumnType("int");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("RegisterId")
                        .HasColumnType("Uniqueidentifier");

                    b.Property<Guid>("ShopTypePkId");

                    b.Property<string>("Tel")
                        .HasColumnType("varchar(11)");

                    b.Property<string>("WorkingTime")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("PkId");

                    b.HasIndex("ShopTypePkId");

                    b.ToTable("shop","shop");
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.ShopImg", b =>
                {
                    b.Property<Guid>("MShopId");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("MShopId", "Img");

                    b.ToTable("shopImg","shop");
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.ShopType", b =>
                {
                    b.Property<Guid>("PkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("PkId");

                    b.ToTable("shopType","shop");
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.VisitNum", b =>
                {
                    b.Property<Guid>("MShopId");

                    b.Property<string>("Year")
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Month")
                        .HasColumnType("varchar(2)");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.HasKey("MShopId", "Year", "Month");

                    b.ToTable("visitNum","shop");
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.GBProduct", b =>
                {
                    b.HasOne("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.GBProductImg", b =>
                {
                    b.HasOne("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.GBProduct", "MGBProduct")
                        .WithMany("Imgs")
                        .HasForeignKey("MGBProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.MonthSell", b =>
                {
                    b.HasOne("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.Shop", "MShop")
                        .WithMany("MonthSells")
                        .HasForeignKey("MShopId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.ProductType", b =>
                {
                    b.HasOne("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.Shop", "_Shop")
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.Shop", b =>
                {
                    b.HasOne("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.ShopType", "Type")
                        .WithMany("Shops")
                        .HasForeignKey("ShopTypePkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.ShopImg", b =>
                {
                    b.HasOne("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.Shop", "MShop")
                        .WithMany("Imgs")
                        .HasForeignKey("MShopId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.VisitNum", b =>
                {
                    b.HasOne("GB_Project.Services.ShopService.ShopDomin.AggregatesModel.Shop", "MShop")
                        .WithMany("VisitNums")
                        .HasForeignKey("MShopId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
